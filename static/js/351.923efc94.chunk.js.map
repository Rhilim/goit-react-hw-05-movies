{"version":3,"file":"static/js/351.923efc94.chunk.js","mappings":"qUAIaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,qMCFVE,EAAiBF,EAAAA,EAAAA,IAAH,yDAMdG,EAAgBH,EAAAA,EAAAA,IAAH,qE,SC6E1B,EAzEwB,WACtB,OAAkCI,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIH,GAAa,GAFjB,UAG+BI,EAAAA,EAAAA,IAAaH,GAH5C,OAGUI,EAHV,OAIIC,QAAQC,IAAIF,GAEZG,EAAAA,GAAAA,QAAc,+CACdV,EAAaO,GAPjB,kDASIG,EAAAA,GAAAA,MAAY,gCAAZ,MATJ,yBAWIR,GAAa,GAXjB,8EAFc,sBACTC,GADS,mCAgBdQ,EACD,GAAE,CAACR,KAGF,6BACE,SAACS,EAAA,EAAD,UAAUX,IAAa,SAACY,EAAA,EAAD,OACvB,UAACpB,EAAD,CAAYqB,GAAG,IAAf,WACE,SAAC,MAAD,IAAmB,UAIpBf,IACC,iCACE,wBAAKA,EAAUgB,SACf,UAACnB,EAAD,YACE,gBACEoB,IAAG,yCAAoCjB,EAAUkB,YAA9C,oBAvCD,oCAwCFC,IAAKnB,EAAUgB,SAEjB,UAAClB,EAAD,YACE,uBAAIE,EAAUoB,YACd,yBAAG,iBAAepB,EAAUqB,iBAC5B,yBAAG,YAAUrB,EAAUsB,QAAQ,eAC/B,yBAAG,WACQtB,EAAUuB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAE1D,yBAAG,iBAAe3B,EAAU4B,iBAC5B,yBAAG,eAAa5B,EAAU6B,qBAG9B,SAAC,KAAD,QAGJ,mBACA,uBAAG,4BAEH,2BACE,yBACE,SAAC,KAAD,CAAMd,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,mBACA,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACjB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/BackButton.jsx","components/OneMovie.styled.jsx","pages/SingleMoviePage.js"],"sourcesContent":["import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom'\n\n\nexport const BackButton = styled(NavLink)`\ndisplay: inline-flex; \nalign-items: flex-end;\ngap: 3px;\nborder: none;\npadding: 12px 6px;\nbackground-color: grey;\ncolor: black;\n  &.active {\n    color: orange;\n  }\n`","import styled from '@emotion/styled';\n\nexport const BasicContainer = styled.div`\n  display: flex;\n\n  gap: 3px;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { Link, Outlet, useParams } from 'react-router-dom';\nimport { FaArrowLeftLong } from 'react-icons/fa6';\nimport { getMovieById } from 'api';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { Loader } from 'components/Loader';\nimport { Wrapper } from 'components/Wrapper';\nimport { BackButton } from 'components/BackButton';\nimport { BasicContainer, InfoContainer } from 'components/OneMovie.styled';\n\nconst api_key = '370cedd7ac7db43491cdc5a63d979178';\n\nconst SingleMoviePage = () => {\n  const [movieData, setMovieData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchMovie() {\n      try {\n        setIsLoading(true);\n        const movieDetails = await getMovieById(movieId);\n        console.log(movieDetails);\n\n        toast.success('Please see below for selected movie details');\n        setMovieData(movieDetails);\n      } catch (error) {\n        toast.error('Error fetching movie details:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <main>\n      <Wrapper>{isLoading && <Loader />}</Wrapper>\n      <BackButton to=\"/\">\n        <FaArrowLeftLong />\n        Back\n      </BackButton>\n      {/* <div>SingleMoviePage of: {movieId}</div> */}\n      {movieData && (\n        <>\n          <h2>{movieData.title}</h2>\n          <BasicContainer>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${movieData.poster_path}?api_key=${api_key}`}\n              alt={movieData.title}\n            />\n            <InfoContainer>\n              <p>{movieData.overview}</p>\n              <p>Release Date: {movieData.release_date}</p>\n              <p>Runtime: {movieData.runtime} minutes</p>\n              <p>\n                Genres: {movieData.genres.map(genre => genre.name).join(', ')}\n              </p>\n              <p>Vote Average: {movieData.vote_average}</p>\n              <p>Vote Count: {movieData.vote_count}</p>\n            </InfoContainer>\n          </BasicContainer>\n          <Toaster />\n        </>\n      )}\n      <hr />\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default SingleMoviePage;\n"],"names":["BackButton","styled","NavLink","BasicContainer","InfoContainer","useState","movieData","setMovieData","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieById","movieDetails","console","log","toast","fetchMovie","Wrapper","Loader","to","title","src","poster_path","alt","overview","release_date","runtime","genres","map","genre","name","join","vote_average","vote_count","Suspense","fallback"],"sourceRoot":""}