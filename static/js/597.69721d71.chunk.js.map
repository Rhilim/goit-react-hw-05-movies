{"version":3,"file":"static/js/597.69721d71.chunk.js","mappings":"mTAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAGzB,IAAMC,EAAU,CACdC,OAAQ,CACNC,QANU,mCAOVC,SAAU,SAEZC,QAAS,CACP,eAAgB,mBAChBC,cAAe,+NAKNC,EAAW,mCAAG,6GAEAP,EAAAA,EAAAA,IAAU,oBAAqBC,GAF/B,cAEjBO,EAFiB,yBAIhBA,EAASC,KAAKC,SAJE,uCAOvBC,QAAQC,MAAM,kCAAd,MAPuB,kBAQhB,IARgB,yDAAH,qDAaTC,EAAY,mCAAG,WAAMC,GAAN,gGAEDd,EAAAA,EAAAA,IAAA,iBAAoBc,GAAWb,GAF9B,cAElBO,EAFkB,yBAIjBA,EAASC,MAJQ,gCAMxBE,QAAQC,MAAR,MANwB,yDAAH,sDAWZG,EAAe,mCAAG,WAAOD,GAAP,gGAEJd,EAAAA,EAAAA,IAAA,iBAAoBc,EAApB,YAAuCb,GAFnC,cAErBO,EAFqB,yBAIpBA,EAASC,MAJW,gCAM3BE,QAAQC,MAAR,MAN2B,yDAAH,sDAUfI,EAAe,mCAAG,WAAOF,GAAP,gGAEJd,EAAAA,EAAAA,IAAA,iBAAoBc,EAApB,YAAuCb,GAFnC,cAErBO,EAFqB,yBAIpBA,EAASC,MAJW,gCAM3BE,QAAQC,MAAR,MAN2B,yDAAH,sDAWfK,EAAY,mCAAG,WAAOC,GAAP,gGAEDlB,EAAAA,EAAAA,IAAA,8BAAiCkB,EAAjC,8CAAoFjB,GAFnF,cAElBO,EAFkB,OAGxBG,QAAQQ,IAAIX,GAHY,kBAIjBA,EAASC,MAJQ,gCAMxBE,QAAQC,MAAR,MANwB,yDAAH,qD,6ICb3B,UA5Ca,WACX,OAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QAoBR,OAlBAY,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIJ,GAAa,GAFjB,UAG4BP,EAAAA,EAAAA,IAAgBD,GAH5C,OAGUa,EAHV,OAKIC,EAAAA,GAAAA,QAAc,0BACdJ,EAAQG,EAAUJ,MANtB,gDAQIK,EAAAA,GAAAA,MAAY,4BAAZ,MARJ,yBAUIN,GAAa,GAVjB,6EAFc,sBACTR,GADS,mCAede,EACD,GAAE,CAACf,KAGF,iCACE,SAAC,IAAD,UAAUO,IAAa,SAAC,IAAD,OACvB,SAAC,KAAD,IACCE,GACCA,EAAKO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAClC,OACE,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAO,OAET,wBAAKJ,KACL,yBAAG,cAAYC,OAPRH,EAUZ,MAGR,C,8EChDYO,EAAS,WACpB,OACE,0BACE,SAAC,KAAD,CACNC,OAAO,KACPF,MAAM,KACNG,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIR,C,wFCfYC,EAAgBC,EAAAA,GAAAA,IAAH,8FAMbC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACE,SAACH,EAAD,WACE,0BAAOG,KAGZ,C","sources":["api.js","components/Cast.jsx","components/Loader.jsx","components/Wrapper.jsx"],"sourcesContent":["import axios from 'axios';\n\n//Get the trending movies\nconst api_key='370cedd7ac7db43491cdc5a63d979178';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n\nconst options = {\n  params: {\n    api_key: api_key,\n    language: 'en-US',\n  },\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNzBjZWRkN2FjN2RiNDM0OTFjZGM1YTYzZDk3OTE3OCIsInN1YiI6IjY0ZWRmMTU5NTk0Yzk0MDEzOWNhNWMzMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.K2jCVn_RVGCejH5kZgcmybGQri87X46QtXPYHOTCLXo',\n  },\n};\n\n\nexport const getTrending = async () => {\n    try {\n    const response = await axios.get('/trending/all/day', options);\n    // console.log(response.data.results)\n    return response.data.results;\n    \n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return []; \n  }\n};\n\n\n  export const getMovieById = async movieId => {\n    try {\n      const response = await axios.get(`/movie/${movieId}`, options);\n      // console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \n \n  export const getMovieCredits = async (movieId) => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/credits`, options);\n      // console.log(response);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  export const getMovieReviews = async (movieId) => {\n    try {\n      const response = await axios.get(`/movie/${movieId}/reviews`, options);\n      // console.log(response);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n\n  export const searchMovies = async (query) => {\n    try {\n      const response = await axios.get(`/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n","import { getMovieCredits } from 'api';\nimport { useEffect, useState } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { Wrapper } from './Wrapper';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchCredits() {\n      try {\n        setIsLoading(true);\n        const movieCast = await getMovieCredits(movieId);\n\n        toast.success('Here is the movie cast');\n        setCast(movieCast.cast);\n      } catch (error) {\n        toast.error('Error fetching cast data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      <Wrapper>{isLoading && <Loader />}</Wrapper>\n      <Toaster />\n      {cast &&\n        cast.map(({ id, profile_path, name, character }) => {\n          return (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                width={200}\n              />\n              <h3>{name}</h3>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n    </>\n  );\n};\nexport default Cast;","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#4fa94d\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n    </div>\n  );\n};\n\n\n","import styled from 'styled-components';\n\nexport const WrapperStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Wrapper = ({ children }) => {\n  return (\n    <WrapperStyled>\n      <main>{children}</main>\n    </WrapperStyled>\n  );\n};\n"],"names":["axios","options","params","api_key","language","headers","Authorization","getTrending","response","data","results","console","error","getMovieById","movieId","getMovieCredits","getMovieReviews","searchMovies","query","log","useState","isLoading","setIsLoading","cast","setCast","useParams","useEffect","movieCast","toast","fetchCredits","map","id","profile_path","name","character","src","alt","width","Loader","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","WrapperStyled","styled","Wrapper","children"],"sourceRoot":""}