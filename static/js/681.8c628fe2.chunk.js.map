{"version":3,"file":"static/js/681.8c628fe2.chunk.js","mappings":"4PAuDA,UAhDgB,WACd,OAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIL,GAAa,GAFjB,UAG+BM,EAAAA,EAAAA,IAAgBH,GAH/C,OAGUI,EAHV,OAMIC,EAAAA,GAAAA,QAAc,8BACdN,EAAWK,EAAaE,SAP5B,gDASID,EAAAA,GAAAA,MAAY,4BAAZ,MATJ,yBAWIR,GAAa,GAXjB,6EAFc,sBACTG,GADS,mCAgBdO,EACD,GAAE,CAACP,KAGF,iCACE,SAAC,IAAD,UAAUJ,IAAa,SAAC,IAAD,OACvB,SAAC,KAAD,IAECE,EACCA,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,yBACA,2BACE,0BAAI,WAASD,MACb,yBAAG,cAAYC,OAFRF,IAMZ,KAED,uBAAG,wCAIV,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { getMovieReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { Wrapper } from './Wrapper';\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchReview() {\n      try {\n        setIsLoading(true);\n        const movieReviews = await getMovieReviews(movieId);\n        // console.log(movieReviews.results);\n\n        toast.success('Here are the movie reviews');\n        setReviews(movieReviews.results);\n      } catch (error) {\n        toast.error('Error fetching cast data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchReview();\n  }, [movieId]);\n\n  return (\n    <>\n      <Wrapper>{isLoading && <Loader />}</Wrapper>\n      <Toaster />\n\n      {reviews ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <ul>\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>Character: {content}</p>\n            </li>\n            </ul>\n          );\n        })\n      ) : (\n        <p>There is no reviews on this movie</p>\n      )}\n    </>\n  );\n};\n\n\nexport default Reviews;"],"names":["useState","isLoading","setIsLoading","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","movieReviews","toast","results","fetchReview","map","id","author","content"],"sourceRoot":""}